#!/usr/bin/env perl

# This is part of the "futilities" collection
# http://github.com/drench/futilities
# Copyright 2010 Daniel Rench
# MIT licensed; see the bundled LICENSE file

use strict;
use integer;
use warnings;

use Getopt::Long 'GetOptions';
use WWW::Mechanize ();

my ($url, $dbname, $username, $password, $wp_conf) = ('', '', '', '', '');

GetOptions(
    'dbname=s'   => \$dbname,
    'url=s'      => \$url,
    'username=s' => \$username,
    'password=s' => \$password,
    'wp_conf=s'  => \$wp_conf,
) || usage();

if (length $wp_conf) {
    my $dbinfo = get_wp_conf($wp_conf);

    $dbname   = $dbinfo->{NAME};
    $password = $dbinfo->{PASSWORD};
    $username = $dbinfo->{USER};
}

usage() if
    ($url !~ m{^https?://}) ||
    (!length $dbname) ||
    (!length $username) ||
    (!length $password);

sub usage {
    print "Usage: $0 --url=X --dbname=X --username=X --password=X > BACKUP.sql.gz\n";
    print "or: $0 --url=X --wp_conf=/path/to/wp-config.php > BACKUP.sql.gz\n";
    exit 111;
}

sub get_wp_conf {
    use IPC::Open2 ();
    my $cf = shift;
    open(my $h, '<', $cf) || die "open $cf: $!";

    my $defs = join q{}, grep { /^define/ } <$h>;

    my($rh, $wh);
    my $pid = IPC::Open2::open2($rh, $wh, 'php');

    print $wh "<?php $defs ";
    for (qw(NAME PASSWORD USER)) {
        print $wh qq{echo "$_=" . DB_$_ . "\n";};
    }
    close $wh;

    my %dbinfo = map { chomp; split /=/, $_, 2 } <$rh>;

    return \%dbinfo;
}

my $mech = WWW::Mechanize->new();

$mech->get($url);

$mech->submit_form(
    form_name => 'login_form',
    fields    => {
        pma_username => $username,
        pma_password => $password,
    },
);

$mech->get( $mech->find_link(id => 'frame_navigation') );
$mech->get( $mech->find_link(text_regex => qr{^\Q$dbname\E\s\(\d+\)}) );
$mech->get( $mech->find_link(id => 'frame_content') );
$mech->get( $mech->find_link(text_regex => qr{\bExport$}) );

my $resp = $mech->submit_form(
    form_name => 'dump',
    fields    => {
        db          => $dbname,
        what        => 'sql',
        asfile      => 'sendit',
        compression => 'gzip',
    },
);

print $resp->content();
